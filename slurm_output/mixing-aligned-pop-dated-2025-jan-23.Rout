
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

- Project '/oscar/home/akhann16/code/net-ergm-v4plus' loaded. [renv 1.0.7]
> # Analyze synthetic dataset with 32K nodes
> 
> 
> # Fit ERGM with 5 dyadic independent terms
> 
> rm(list = ls())
> 
> # Label and outputs for this run
> run_label <- "mixing-aligned-pop-dated-2025-jan-23" # set manually to ensure intentional updates
> 
> # Activate R environment ----------
> 
> library(renv)

Attaching package: ‘renv’

The following objects are masked from ‘package:stats’:

    embed, update

The following objects are masked from ‘package:utils’:

    history, upgrade

The following objects are masked from ‘package:base’:

    autoload, load, remove, use

> renv::activate()
> 
> 
> # Libraries ----------
> 
> library(network)

‘network’ 1.18.2 (2023-12-04), part of the Statnet Project
* ‘news(package="network")’ for changes since last version
* ‘citation("network")’ for citation information
* ‘https://statnet.org’ for help, support, and other information

> library(ergm)

‘ergm’ 4.6.0 (2023-12-17), part of the Statnet Project
* ‘news(package="ergm")’ for changes since last version
* ‘citation("ergm")’ for citation information
* ‘https://statnet.org’ for help, support, and other information

‘ergm’ 4 is a major update that introduces some backwards-incompatible
changes. Please type ‘news(package="ergm")’ for a list of major
changes.

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(ergm.userterms)
Loading required package: statnet.common

Attaching package: ‘statnet.common’

The following objects are masked from ‘package:base’:

    attr, order


‘ergm.userterms’ 3.1.1 (2020-02-01), part of the Statnet Project
* ‘news(package="ergm.userterms")’ for changes since last version
* ‘citation("ergm.userterms")’ for citation information
* ‘https://statnet.org’ for help, support, and other information

NOTE: If you use custom ERGM terms based on ‘ergm.userterms’ version
prior to 3.1, you will need to perform a one-time update of the package
boilerplate files (the files that you did not write or modify) from
‘ergm.userterms’ 3.1 or later. See help('eut-upgrade') for
instructions.

> library(here)
here() starts at /oscar/home/akhann16/code/net-ergm-v4plus
> library(styler)
> 
> 
> # Create output directory ---------
> out_dir <- here("fit-ergms", "out", run_label)
> if (!dir.exists(out_dir)) dir.create(out_dir, recursive = FALSE)
> 
> 
> # Load data objects ----------
> 
> data_objects <- readRDS(here("fit-ergms", "out", "processed_data.rds"))
> names(data_objects)
 [1] "data"                    "n0"                     
 [3] "edges_only_net"          "tgt.old.pctyoung"       
 [5] "tgt.young.pctold"        "tgt.young.pctyoung"     
 [7] "edges_target"            "tgt.female.pctmale"     
 [9] "tgt.male.pctfemale"      "tgt.male.pctmale"       
[11] "target_race_num"         "indegree_data"          
[13] "outdegree_data"          "dist_nedge_distribution"
> 
> intersect(names(data_objects), ls())
character(0)
> list2env(data_objects, envir = globalenv())
<environment: R_GlobalEnv>
> ls()
 [1] "data"                    "data_objects"           
 [3] "dist_nedge_distribution" "edges_only_net"         
 [5] "edges_target"            "indegree_data"          
 [7] "n0"                      "out_dir"                
 [9] "outdegree_data"          "run_label"              
[11] "target_race_num"         "tgt.female.pctmale"     
[13] "tgt.male.pctfemale"      "tgt.male.pctmale"       
[15] "tgt.old.pctyoung"        "tgt.young.pctold"       
[17] "tgt.young.pctyoung"     
> 
> inedges_target <- indegree_data$in_degree * indegree_data$mean_n
> sum(inedges_target)
[1] 20256.49
> 
> outedges_target <- outdegree_data$out_degree * outdegree_data$mean_n
> sum(outedges_target)
[1] 25663.36
> 
> # Degree and dist assignments ---------
> 
> ## outdegrees
> deg.terms <- 0:3
> deg.terms.0 <- 0
> deg.terms.0_1 <- 0:1
> deg.terms.0_2 <- 0:2
> deg.terms.013 <- c(0, 1, 3)
> 
> ## indegrees
> indeg.terms.0 <- 0
> indeg.terms <- 0:1
> 
> ## dist
> dist.terms <- 1:3 # fourth is left out
> 
> class(target_race_num)
[1] "numeric"
> target_race_num <- unname(target_race_num)
> 
> 
> # Helper function to only run fits that were not previously saved ----------
> 
> load_or_run <- function(name, expr) {
+   path <- file.path(out_dir, paste0(name, ".rds"))
+   if (file.exists(path)) {
+     message("Loading saved ", name)
+     readRDS(path)
+   } else {
+     message("Running and saving ", name)
+     obj <- eval(expr)
+     saveRDS(obj, path)
+     obj
+   }
+ }
> 
> 
> 
> # Fit Non-empty net including race term ---------
> sex_mixing_terms <- summary(n0 ~ nodemix("sex", levels2 = -1))
> print(names(sex_mixing_terms))
[1] "mix.sex.M.F" "mix.sex.F.M" "mix.sex.M.M"
> sex_mixing_align_order <- c(tgt.male.pctfemale, tgt.female.pctmale, tgt.male.pctmale)
> print(sex_mixing_align_order)
[1] 4261.362 5602.222 9055.394
> 
> age_mixing_terms <- summary(n0 ~ nodemix("young", levels2 = -1))
> print(names(age_mixing_terms))
[1] "mix.young.1.0" "mix.young.0.1" "mix.young.1.1"
> age_mixing_align_order <- c(
+   tgt.young.pctold,   # 1 → 0
+   tgt.old.pctyoung,   # 0 → 1
+   tgt.young.pctyoung  # 1 → 1
+ )
> print(age_mixing_align_order)
[1]  895.4371 2892.9506 1400.5554
> 
> race_mixing_terms <- summary(n0 ~ nodemix("race.num", levels2 = -1))
> print(names(race_mixing_terms))
 [1] "mix.race.num.2.1" "mix.race.num.3.1" "mix.race.num.4.1" "mix.race.num.1.2"
 [5] "mix.race.num.2.2" "mix.race.num.3.2" "mix.race.num.4.2" "mix.race.num.1.3"
 [9] "mix.race.num.2.3" "mix.race.num.3.3" "mix.race.num.4.3" "mix.race.num.1.4"
[13] "mix.race.num.2.4" "mix.race.num.3.4" "mix.race.num.4.4"
> # race order is already aligned
> 
> fit_nonempty_network_w_race_num <-
+   load_or_run("fit_nonempty_network_w_race_num", quote(
+     ergm(
+       edges_only_net ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Running and saving fit_nonempty_network_w_race_num
Unable to match target stats. Using MCMLE estimation.
Starting maximum pseudolikelihood estimation (MPLE):
Obtaining the responsible dyads.
Evaluating the predictor and response matrix.
Maximizing the pseudolikelihood.
Finished MPLE.
Stochastic approximation algorithm with theta_0 equal to:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
    -12.31890934      -0.39794282      -0.10971004      -0.05014623 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
     -1.56479924      -0.52374632       0.09380116       1.60840229 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
      2.04009480       3.95077562       1.13470400       3.11642672 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
      1.65495402       4.05362521       0.72619366       0.53098324 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
      2.81305649       3.42010577      -1.33879593       0.15236191 
mix.race.num.3.4 mix.race.num.4.4 
     -0.44728795       2.36956311 
Starting burnin of 16000000 steps
Phase 1: 200 steps (interval = 1000000)
Stochastic Approximation estimate:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
    -12.31518041      -0.38717415      -0.08580774      -0.06070103 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
     -1.57099735      -0.49109272       0.12069916       1.61730282 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
      2.04798438       4.00519554       1.04038177       3.06238860 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
      1.62481762       4.06809721       0.70660795       0.51087076 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
      2.77610236       3.21869852      -1.25280290       0.11719784 
mix.race.num.3.4 mix.race.num.4.4 
     -0.52599761       2.32632483 
Phase 3:  1000 iterations (interval=1e+06)
This model was fit using MCMC.  To examine model diagnostics and check
for degeneracy, use the mcmc.diagnostics() function.
> 
> non_empty_net_w_race_term <- load_or_run("net_nonempty_w_race_term", quote(
+   simulate(fit_nonempty_network_w_race_num, nsim = 1)
+ ))
Running and saving net_nonempty_w_race_term
> non_empty_net_w_race_term
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 23149 
    missing edges= 0 
    non-missing edges= 23149 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> fit.stepwise.dist <-
+   load_or_run("fit.stepwise.dist", quote(
+     ergm(
+       non_empty_net_w_race_term ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1) +
+         # idegree(indeg.terms)+
+         # odegree(deg.terms)+
+         dist(dist.terms),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num,
+           # c(negbin_inedges$n_nodes[c(indeg.terms+1)]),
+           # c(outedges$n_nodes[c(deg.terms+1)])
+           c(dist_nedge_distribution[dist.terms])
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Running and saving fit.stepwise.dist
Unable to match target stats. Using MCMLE estimation.
Starting maximum pseudolikelihood estimation (MPLE):
Obtaining the responsible dyads.
Evaluating the predictor and response matrix.
Maximizing the pseudolikelihood.
Finished MPLE.
Stochastic approximation algorithm with theta_0 equal to:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
    -12.67024471       0.04620434       0.70006906       0.69931466 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
     -1.77059216      -0.62360518       0.20168925       1.63359326 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
      1.84911549       3.99154639       1.19177432       3.12746695 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
      1.72038106       4.21802023       0.59140556       0.48300747 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
      2.48437879       3.65110060      -0.97304562       0.36416765 
mix.race.num.3.4 mix.race.num.4.4            dist1            dist2 
     -0.36105924       3.02279270       6.55826537       3.40188629 
           dist3 
     -1.46469223 
Starting burnin of 16000000 steps
Phase 1: 200 steps (interval = 1000000)
Stochastic Approximation estimate:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
     -12.6444245       -0.1101198        0.2016093        0.2283926 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
      -1.5271596       -0.4335030        0.1888807        1.8746465 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
       2.2613349        4.2364437        1.2956719        2.9171486 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
       1.7466454        4.2644328        0.9055576        0.6315525 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
       2.7469293        3.2530088       -1.0224306        0.2803534 
mix.race.num.3.4 mix.race.num.4.4            dist1            dist2 
      -0.4761568        1.9236661        6.7384176        3.5204673 
           dist3 
      -1.1649096 
Phase 3:  1000 iterations (interval=1e+06)
This model was fit using MCMC.  To examine model diagnostics and check
for degeneracy, use the mcmc.diagnostics() function.
Warning message:
In ergm.mple(s, s.obs, init = init, control = control, verbose = verbose,  :
  GLM may be separable; restarting glm with zeros.

> 
> net_stepwise_dist <- load_or_run(
+   "net.stepwise.dist",
+   quote(simulate(fit.stepwise.dist, nsim = 1))
+ )
Running and saving net.stepwise.dist
> 
> net_stepwise_dist
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 23005 
    missing edges= 0 
    non-missing edges= 23005 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> fit.stepwise.dist.odeg.0 <-
+   load_or_run("fit.stepwise.dist.odeg.0", quote(
+     ergm(
+       net_stepwise_dist ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1) +
+         # idegree(indeg.terms)+
+         odegree(deg.terms.0) +
+         dist(dist.terms),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num,
+           # c(negbin_inedges$n_nodes[c(indeg.terms+1)]),
+           c(outdegree_data$mean_n[c(deg.terms.0 + 1)]),
+           c(dist_nedge_distribution[dist.terms])
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Running and saving fit.stepwise.dist.odeg.0
Unable to match target stats. Using MCMLE estimation.
Starting maximum pseudolikelihood estimation (MPLE):
Obtaining the responsible dyads.
Evaluating the predictor and response matrix.
Maximizing the pseudolikelihood.
Finished MPLE.
Stochastic approximation algorithm with theta_0 equal to:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
     -12.6942838       -0.2024568       -0.1018316       -0.2985217 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
      -1.7023220       -0.3436855        0.2012066        1.9833369 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
       2.3066764        4.6329762        1.0737034        2.6276626 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
       1.6457989        4.6760257        0.7282416        0.5153786 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
       2.9725836        3.8719603       -1.2027461        0.8712450 
mix.race.num.3.4 mix.race.num.4.4         odegree0            dist1 
      -1.0010457        3.4299420       -0.3195167        7.8610029 
           dist2            dist3 
       3.8208137       -1.0393828 
Starting burnin of 16000000 steps
Phase 1: 200 steps (interval = 1000000)
Stochastic Approximation estimate:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
    -12.74765099      -0.27054662       0.05264002       0.07583201 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
     -1.56454890      -0.41774696       0.15036400       1.65512774 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
      2.04106670       4.14564830       0.94872332       2.52790277 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
      1.43525799       4.07402617       0.54837399       0.31605510 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
      2.42516164       3.03828100      -1.40506795      -0.04064775 
mix.race.num.3.4 mix.race.num.4.4         odegree0            dist1 
     -0.78248549       1.57626616      -0.29958154       7.60788668 
           dist2            dist3 
      3.94167821      -0.78001523 
Phase 3:  1000 iterations (interval=1e+06)
This model was fit using MCMC.  To examine model diagnostics and check
for degeneracy, use the mcmc.diagnostics() function.
> 
> net_fit_stepwise_dist_odeg0 <- load_or_run("net_fit_stepwise_dist_odeg0", quote(
+   simulate(fit.stepwise.dist.odeg.0, nsim = 1)
+ ))
Running and saving net_fit_stepwise_dist_odeg0
> net_fit_stepwise_dist_odeg0
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 25382 
    missing edges= 0 
    non-missing edges= 25382 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> fit.stepwise.dist.odeg.0.1 <-
+   load_or_run("fit.stepwise.dist.odeg.0.1", quote(
+     ergm(
+       net_fit_stepwise_dist_odeg0 ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1) +
+         # idegree(indeg.terms)+
+         odegree(deg.terms.0_1) +
+         dist(dist.terms),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num,
+           # c(negbin_inedges$n_nodes[c(indeg.terms+1)]),
+           c(outdegree_data$mean_n[c(deg.terms.0_1 + 1)]),
+           c(dist_nedge_distribution[dist.terms])
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Running and saving fit.stepwise.dist.odeg.0.1
Unable to match target stats. Using MCMLE estimation.
Starting maximum pseudolikelihood estimation (MPLE):
Obtaining the responsible dyads.
Evaluating the predictor and response matrix.
Maximizing the pseudolikelihood.
Finished MPLE.
Stochastic approximation algorithm with theta_0 equal to:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
     -13.7198773       -0.5014624       -0.3781589       -0.5279923 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
      -1.9384831       -0.7306213       -0.3491697        1.8584579 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
       2.3340160        5.9443007        0.3568364        1.9746928 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
       1.3849029        5.6379221        0.4077531       -0.3589912 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
       2.2358158        5.0709413       -0.9358604        0.4715121 
mix.race.num.3.4 mix.race.num.4.4         odegree0         odegree1 
      -0.2917462        4.5527468       -4.0801900       -2.3355667 
           dist1            dist2            dist3 
       8.1709198        4.3578532       -0.9831342 
Starting burnin of 16000000 steps
Phase 1: 200 steps (interval = 1000000)
Stochastic Approximation estimate:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
    -13.82881847      -0.49645360      -0.11943420      -0.14192590 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
     -1.75792648      -0.47423408      -0.05481044       1.40160114 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
      1.78524290       5.38693885       0.67387669       2.25237252 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
      1.17050905       5.25379283       0.30445769       0.04389239 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
      2.14116971       4.14528438      -1.67551041      -0.29729207 
mix.race.num.3.4 mix.race.num.4.4         odegree0         odegree1 
     -1.08219023       2.62751653      -3.82693859      -2.21960523 
           dist1            dist2            dist3 
      7.77807617       4.02297694      -0.75332325 
Phase 3:  1000 iterations (interval=1e+06)
This model was fit using MCMC.  To examine model diagnostics and check
for degeneracy, use the mcmc.diagnostics() function.
> 
> net_fit_stepwise_dist_odeg0_1 <- 
+ load_or_run("net_fit_stepwise_dist_odeg0_1", quote(
+   simulate(fit.stepwise.dist.odeg.0.1, nsim = 1)
+ ))
Running and saving net_fit_stepwise_dist_odeg0_1
> net_fit_stepwise_dist_odeg0_1
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 24599 
    missing edges= 0 
    non-missing edges= 24599 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> fit.stepwise.dist.odeg.0.2 <-
+   load_or_run("fit.stepwise.dist.odeg.0.2", quote(
+     ergm(
+       net_fit_stepwise_dist_odeg0_1 ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1) +
+         # idegree(indeg.terms)+
+         odegree(deg.terms.0_2) +
+         dist(dist.terms),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num,
+           # c(negbin_inedges$n_nodes[c(indeg.terms+1)]),
+           c(outdegree_data$mean_n[c(deg.terms.0_2 + 1)]),
+           c(dist_nedge_distribution[dist.terms])
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Running and saving fit.stepwise.dist.odeg.0.2
Unable to match target stats. Using MCMLE estimation.
Starting maximum pseudolikelihood estimation (MPLE):
Obtaining the responsible dyads.
Evaluating the predictor and response matrix.
Maximizing the pseudolikelihood.
Finished MPLE.
Stochastic approximation algorithm with theta_0 equal to:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
   -7.428785e+01    -5.242855e-01     6.311208e-01     3.339384e-01 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
   -1.698262e+01     1.386582e-03    -1.725142e-01     1.764885e+00 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
    2.406035e+00     6.510322e+01     1.418940e+00     3.361497e+00 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
    2.122503e+00     6.549267e+01    -5.594857e-02    -5.752875e-02 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
    2.448537e+00     6.396531e+01    -2.220060e+00     7.674798e-01 
mix.race.num.3.4 mix.race.num.4.4         odegree0         odegree1 
   -2.236357e-01     6.164740e+01    -1.698025e+02    -1.092667e+02 
        odegree2            dist1            dist2            dist3 
   -4.530794e+01     7.081684e+00     3.416031e+00    -1.835152e+00 
Starting burnin of 16000000 steps
Phase 1: 200 steps (interval = 1000000)
Stochastic Approximation estimate:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
   -7.377195e+01    -5.961300e-02     3.023787e-01     2.836134e-01 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
   -7.777245e+10    -3.918845e-01    -1.096289e+00     2.640254e+00 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
    3.114412e+00     6.493635e+01     1.649168e+00     3.594125e+00 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
    2.538459e+00     6.512330e+01     1.237840e+00     1.333301e+00 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
    3.569057e+00     6.400884e+01    -1.172417e+02     9.668427e-01 
mix.race.num.3.4 mix.race.num.4.4         odegree0         odegree1 
   -6.336097e-02     6.258907e+01    -1.725257e+02    -1.120102e+02 
        odegree2            dist1            dist2            dist3 
   -5.139932e+01     7.034360e+00     3.748802e+00    -1.138484e+00 
Phase 3:  1000 iterations (interval=1e+06)
This model was fit using MCMC.  To examine model diagnostics and check
for degeneracy, use the mcmc.diagnostics() function.
Warning messages:
1: In mple.existence(pl) : The MPLE does not exist!
2: Approximate Hessian matrix is singular. Standard errors due to MCMC approximation of the likelihood cannot be evaluated. This is likely due to insufficient MCMC sample size or highly correlated model terms. 
> 
> net_fit_stepwise_dist_odeg0_2 <- 
+ load_or_run("net_fit_stepwise_dist_odeg0_2", quote(
+   simulate(fit.stepwise.dist.odeg.0.2, nsim = 1)
+ ))
Running and saving net_fit_stepwise_dist_odeg0_2
> net_fit_stepwise_dist_odeg0_2 #this is degenerate
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 4323257 
    missing edges= 0 
    non-missing edges= 4323257 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> fit.stepwise.dist.odeg.013 <-
+   load_or_run("fit.stepwise.dist.odeg.0.2", quote(
+     ergm(
+       net_fit_stepwise_dist_odeg0_1 ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1) +
+         # idegree(indeg.terms)+
+         odegree(deg.terms.013) +
+         dist(dist.terms),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num,
+           # c(negbin_inedges$n_nodes[c(indeg.terms+1)]),
+           c(outdegree_data$mean_n[c(deg.terms.013 + 1)]),
+           c(dist_nedge_distribution[dist.terms])
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Loading saved fit.stepwise.dist.odeg.0.2
> 
> net_fit_stepwise_dist_odeg013 <- 
+ load_or_run("net_fit_stepwise_dist_odeg013", quote(
+   simulate(fit.stepwise.dist.odeg.013, nsim = 1)
+ ))
Running and saving net_fit_stepwise_dist_odeg013
> net_fit_stepwise_dist_odeg013 #this is degenerate
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 4312533 
    missing edges= 0 
    non-missing edges= 4312533 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> 
> fit.stepwise.dist.odeg.01.indeg0 <-
+   load_or_run("fit.stepwise.dist.odeg.01.indeg0", quote(
+     ergm(
+       net_fit_stepwise_dist_odeg0_1 ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1) +
+         idegree(indeg.terms.0)+
+         odegree(deg.terms.0_1) +
+         dist(dist.terms),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num,
+           c(indegree_data$mean_n[c(indeg.terms.0 + 1)]),
+           c(outdegree_data$mean_n[c(deg.terms.0_1 + 1)]),
+           c(dist_nedge_distribution[dist.terms])
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Running and saving fit.stepwise.dist.odeg.01.indeg0
Unable to match target stats. Using MCMLE estimation.
Starting maximum pseudolikelihood estimation (MPLE):
Obtaining the responsible dyads.
Evaluating the predictor and response matrix.
Maximizing the pseudolikelihood.
Finished MPLE.
Stochastic approximation algorithm with theta_0 equal to:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
    -13.62823563       0.08195399       0.35396447       0.20433850 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
     -1.72056156      -0.11340592       0.25397304       1.65942600 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
      1.83935274       5.46894329       0.68397322       2.82666680 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
      1.71775476       5.95425590       0.34930510       0.33108432 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
      2.57743720       4.02930413      -0.94310618       0.66354957 
mix.race.num.3.4 mix.race.num.4.4         idegree0         odegree0 
      0.70597524       4.26035140       1.57212849      -4.37329556 
        odegree1            dist1            dist2            dist3 
     -2.49533657       6.82728462       3.38059034      -1.28376201 
Starting burnin of 16000000 steps
Phase 1: 200 steps (interval = 1000000)
Stochastic Approximation estimate:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
    -13.63210273      -0.13908867       0.07181806       0.11795053 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
     -1.70900052      -0.39973209       0.02369941       1.79299447 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
      2.16868624       5.90626580       0.85506247       2.65233761 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
      1.44702907       5.70736368       0.73740978       0.59698895 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
      2.68326204       4.93683048      -0.64795541       0.78839988 
mix.race.num.3.4 mix.race.num.4.4         idegree0         odegree0 
      0.01446318       4.21998100       1.59115082      -4.44978999 
        odegree1            dist1            dist2            dist3 
     -2.51230238       6.69409948       3.43776778      -1.15421904 
Phase 3:  1000 iterations (interval=1e+06)
This model was fit using MCMC.  To examine model diagnostics and check
for degeneracy, use the mcmc.diagnostics() function.
> 
> net_fit_stepwise_dist_odeg01_indeg0 <- 
+ load_or_run("net_fit_stepwise_dist_odeg01_indeg0", quote(
+   simulate(fit.stepwise.dist.odeg.01.indeg0, nsim = 1)
+ ))
Running and saving net_fit_stepwise_dist_odeg01_indeg0
> net_fit_stepwise_dist_odeg01_indeg0 
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 23134 
    missing edges= 0 
    non-missing edges= 23134 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> ###
> 
> fit.stepwise.dist.odeg.01.indeg <-
+   load_or_run("fit.stepwise.dist.odeg.01.indeg", quote(
+     ergm(
+       net_fit_stepwise_dist_odeg0_1 ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1) +
+         idegree(indeg.terms)+
+         odegree(deg.terms.0_1) +
+         dist(dist.terms),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num,
+           c(indegree_data$mean_n[c(indeg.terms + 1)]),
+           c(outdegree_data$mean_n[c(deg.terms.0_1 + 1)]),
+           c(dist_nedge_distribution[dist.terms])
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Running and saving fit.stepwise.dist.odeg.01.indeg
Unable to match target stats. Using MCMLE estimation.
Starting maximum pseudolikelihood estimation (MPLE):
Obtaining the responsible dyads.
Evaluating the predictor and response matrix.
Maximizing the pseudolikelihood.
Finished MPLE.
Stochastic approximation algorithm with theta_0 equal to:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
     -13.0531982       -0.2309206       -0.2012229       -0.1315738 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
      -1.8708404       -0.1676684       -0.5302894        1.5512479 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
       2.3612235        6.3537830        0.7147636        2.5282270 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
       1.4747264        6.1459078        0.9791960        0.3202533 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
       2.8683801        4.8897342       -0.3242921        1.1335642 
mix.race.num.3.4 mix.race.num.4.4         idegree0         idegree1 
       0.2453858        4.8565944        3.8012662        1.7939286 
        odegree0         odegree1            dist1            dist2 
      -4.6103638       -2.5588256        7.7435242        3.4308449 
           dist3 
      -1.1551855 
Starting burnin of 16000000 steps
Phase 1: 200 steps (interval = 1000000)
Stochastic Approximation estimate:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
   -1.310351e+01    -3.628798e-01    -1.028622e-01    -5.682512e-02 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
   -1.803570e+00    -3.975226e-01     8.556161e-04     1.757023e+00 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
    2.112494e+00     5.899380e+00     6.435937e-01     2.444124e+00 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
    1.241401e+00     5.665460e+00     6.430292e-01     5.288056e-01 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
    2.604087e+00     4.845687e+00    -8.069956e-01     6.985486e-01 
mix.race.num.3.4 mix.race.num.4.4         idegree0         idegree1 
   -1.060618e-01     3.997723e+00     3.514409e+00     1.691734e+00 
        odegree0         odegree1            dist1            dist2 
   -4.565103e+00    -2.513767e+00     7.412639e+00     3.513669e+00 
           dist3 
   -9.723735e-01 
Phase 3:  1000 iterations (interval=1e+06)
This model was fit using MCMC.  To examine model diagnostics and check
for degeneracy, use the mcmc.diagnostics() function.
> 
> net_fit_stepwise_dist_odeg01_indeg <- 
+ load_or_run("net_fit_stepwise_dist_odeg01_indeg", quote(
+   simulate(fit.stepwise.dist.odeg.01.indeg0, nsim = 1)
+ ))
Running and saving net_fit_stepwise_dist_odeg01_indeg
> net_fit_stepwise_dist_odeg01_indeg0 
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 23134 
    missing edges= 0 
    non-missing edges= 23134 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> ## save.image(file=here("fit-ergms", "out", "stepwise-refactored-std-order-2025-jan23-targets.RData"))
> save.image(file = file.path(out_dir, paste0(run_label, ".RData")))
> 
> proc.time()
     user    system   elapsed 
10114.861   167.381 10336.984 
