
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

- Project '/oscar/home/akhann16/code/net-ergm-v4plus' loaded. [renv 1.0.7]
> # Analyze synthetic dataset with 32K nodes
> 
> 
> # Fit ERGM with 5 dyadic independent terms
> 
> rm(list = ls())
> 
> # Label and outputs for this run
> run_label <- "new-mixing-data-2" # set manually to ensure intentional updates
> 
> # Activate R environment ----------
> 
> library(renv)

Attaching package: ‘renv’

The following objects are masked from ‘package:stats’:

    embed, update

The following objects are masked from ‘package:utils’:

    history, upgrade

The following objects are masked from ‘package:base’:

    autoload, load, remove, use

> renv::activate()
> 
> 
> # Libraries ----------
> 
> library(network)

‘network’ 1.18.2 (2023-12-04), part of the Statnet Project
* ‘news(package="network")’ for changes since last version
* ‘citation("network")’ for citation information
* ‘https://statnet.org’ for help, support, and other information

> library(ergm)

‘ergm’ 4.6.0 (2023-12-17), part of the Statnet Project
* ‘news(package="ergm")’ for changes since last version
* ‘citation("ergm")’ for citation information
* ‘https://statnet.org’ for help, support, and other information

‘ergm’ 4 is a major update that introduces some backwards-incompatible
changes. Please type ‘news(package="ergm")’ for a list of major
changes.

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(ergm.userterms)
Loading required package: statnet.common

Attaching package: ‘statnet.common’

The following objects are masked from ‘package:base’:

    attr, order


‘ergm.userterms’ 3.1.1 (2020-02-01), part of the Statnet Project
* ‘news(package="ergm.userterms")’ for changes since last version
* ‘citation("ergm.userterms")’ for citation information
* ‘https://statnet.org’ for help, support, and other information

NOTE: If you use custom ERGM terms based on ‘ergm.userterms’ version
prior to 3.1, you will need to perform a one-time update of the package
boilerplate files (the files that you did not write or modify) from
‘ergm.userterms’ 3.1 or later. See help('eut-upgrade') for
instructions.

> library(here)
here() starts at /oscar/home/akhann16/code/net-ergm-v4plus
> library(styler)
> 
> 
> # Create output directory ---------
> out_dir <- here("fit-ergms", "out", run_label)
> if (!dir.exists(out_dir)) dir.create(out_dir, recursive = FALSE)
> 
> 
> # Load data objects ----------
> 
> data_objects <- readRDS(here("fit-ergms", "out", "processed_data.rds"))
> names(data_objects)
 [1] "data"                    "n0"                     
 [3] "edges_only_net"          "tgt.old.pctyoung"       
 [5] "tgt.young.pctold"        "tgt.young.pctyoung"     
 [7] "edges_target"            "tgt.female.pctmale"     
 [9] "tgt.male.pctfemale"      "tgt.male.pctmale"       
[11] "target_race_num"         "indegree_data"          
[13] "outdegree_data"          "dist_nedge_distribution"
> 
> intersect(names(data_objects), ls())
character(0)
> list2env(data_objects, envir = globalenv())
<environment: R_GlobalEnv>
> ls()
 [1] "data"                    "data_objects"           
 [3] "dist_nedge_distribution" "edges_only_net"         
 [5] "edges_target"            "indegree_data"          
 [7] "n0"                      "out_dir"                
 [9] "outdegree_data"          "run_label"              
[11] "target_race_num"         "tgt.female.pctmale"     
[13] "tgt.male.pctfemale"      "tgt.male.pctmale"       
[15] "tgt.old.pctyoung"        "tgt.young.pctold"       
[17] "tgt.young.pctyoung"     
> 
> inedges_target <- indegree_data$in_degree * indegree_data$mean_n
> sum(inedges_target)
[1] 20256.49
> 
> outedges_target <- outdegree_data$out_degree * outdegree_data$mean_n
> sum(outedges_target)
[1] 25663.36
> 
> # Degree and dist assignments ---------
> 
> ## outdegrees
> deg.terms <- 0:3
> deg.terms.0 <- 0
> deg.terms.0_1 <- 0:1
> deg.terms.0_2 <- 0:2
> deg.terms.013 <- c(0, 1, 3)
> 
> ## indegrees
> indeg.terms.0 <- 0
> indeg.terms <- 0:1
> 
> ## dist
> dist.terms <- 1:3 # fourth is left out
> 
> class(target_race_num)
[1] "numeric"
> target_race_num <- unname(target_race_num)
> 
> 
> # Helper function to only run fits that were not previously saved ----------
> 
> load_or_run <- function(name, expr) {
+   path <- file.path(out_dir, paste0(name, ".rds"))
+   if (file.exists(path)) {
+     message("Loading saved ", name)
+     readRDS(path)
+   } else {
+     message("Running and saving ", name)
+     obj <- eval(expr)
+     saveRDS(obj, path)
+     obj
+   }
+ }
> 
> 
> 
> # Fit Non-empty net including race term ---------
> sex_mixing_terms <- summary(n0 ~ nodemix("sex", levels2 = -1))
> print(names(sex_mixing_terms))
[1] "mix.sex.M.F" "mix.sex.F.M" "mix.sex.M.M"
> sex_mixing_align_order <- c(tgt.male.pctfemale, tgt.female.pctmale, tgt.male.pctmale)
> print(sex_mixing_align_order)
[1] 6061.420 6281.835 7576.775
> 
> age_mixing_terms <- summary(n0 ~ nodemix("young", levels2 = -1))
> print(names(age_mixing_terms))
[1] "mix.young.1.0" "mix.young.0.1" "mix.young.1.1"
> age_mixing_align_order <- c(
+   tgt.young.pctold,   # 1 → 0
+   tgt.old.pctyoung,   # 0 → 1
+   tgt.young.pctyoung  # 1 → 1
+ )
> print(age_mixing_align_order)
[1] 1910.266 1928.634 1763.322
> 
> race_mixing_terms <- summary(n0 ~ nodemix("race.num", levels2 = -1))
> print(names(race_mixing_terms))
 [1] "mix.race.num.2.1" "mix.race.num.3.1" "mix.race.num.4.1" "mix.race.num.1.2"
 [5] "mix.race.num.2.2" "mix.race.num.3.2" "mix.race.num.4.2" "mix.race.num.1.3"
 [9] "mix.race.num.2.3" "mix.race.num.3.3" "mix.race.num.4.3" "mix.race.num.1.4"
[13] "mix.race.num.2.4" "mix.race.num.3.4" "mix.race.num.4.4"
> # race order is already aligned
> 
> fit_nonempty_network_w_race_num <-
+   load_or_run("fit_nonempty_network_w_race_num", quote(
+     ergm(
+       edges_only_net ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Running and saving fit_nonempty_network_w_race_num
Unable to match target stats. Using MCMLE estimation.
Starting maximum pseudolikelihood estimation (MPLE):
Obtaining the responsible dyads.
Evaluating the predictor and response matrix.
Maximizing the pseudolikelihood.
Finished MPLE.
Stochastic approximation algorithm with theta_0 equal to:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
     -27.3576528        0.2243486        0.3830792        0.1668657 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
      -0.6098360       -1.2834301        0.1079203       17.1699661 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
      17.4294798       19.6482992       14.2955281       16.8443728 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
      11.3030141       17.1074041       14.6553495       15.8701913 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
      17.4584053       17.9572144       11.5583065        3.6941555 
mix.race.num.3.4 mix.race.num.4.4 
       3.4581344       16.6267170 
Starting burnin of 16000000 steps
Phase 1: 200 steps (interval = 1000000)
Stochastic Approximation estimate:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
   -2.920719e+01    -4.545025e-02    -5.596174e-04    -2.371313e-01 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
   -8.637971e-01    -1.416204e+00    -1.300825e-01     1.932755e+01 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
    1.960134e+01     2.177198e+01     1.678625e+01     1.892091e+01 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
    1.541638e+01     1.925281e+01     1.718592e+01     1.804334e+01 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
    1.966666e+01     2.010054e+01     1.603317e+01     3.732409e+00 
mix.race.num.3.4 mix.race.num.4.4 
    3.496388e+00     1.862043e+01 
Phase 3:  1000 iterations (interval=1e+06)
This model was fit using MCMC.  To examine model diagnostics and check
for degeneracy, use the mcmc.diagnostics() function.
Warning messages:
1: In mple.existence(pl) : The MPLE does not exist!
2: Approximate Hessian matrix is singular. Standard errors due to MCMC approximation of the likelihood cannot be evaluated. This is likely due to insufficient MCMC sample size or highly correlated model terms. 
> 
> non_empty_net_w_race_term <- load_or_run("net_nonempty_w_race_term", quote(
+   simulate(fit_nonempty_network_w_race_num, nsim = 1)
+ ))
Running and saving net_nonempty_w_race_term
> non_empty_net_w_race_term
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 193274 
    missing edges= 0 
    non-missing edges= 193274 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> fit.stepwise.dist <-
+   load_or_run("fit.stepwise.dist", quote(
+     ergm(
+       non_empty_net_w_race_term ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1) +
+         # idegree(indeg.terms)+
+         # odegree(deg.terms)+
+         dist(dist.terms),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num,
+           # c(negbin_inedges$n_nodes[c(indeg.terms+1)]),
+           # c(outedges$n_nodes[c(deg.terms+1)])
+           c(dist_nedge_distribution[dist.terms])
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Running and saving fit.stepwise.dist
Unable to match target stats. Using MCMLE estimation.
Starting maximum pseudolikelihood estimation (MPLE):
Obtaining the responsible dyads.
Evaluating the predictor and response matrix.
Maximizing the pseudolikelihood.
Finished MPLE.
Stochastic approximation algorithm with theta_0 equal to:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
     -26.5272590        0.8423122        0.9665384        0.6954240 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
      -0.3473790       -1.0060978        0.4389691       15.7470402 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
      15.8804945       18.0471032       12.9308998       15.2711002 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
      10.5700899       16.0310440       13.2921700       14.1021309 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
      15.7353975       15.5553820       12.2522424       -1.3223719 
mix.race.num.3.4 mix.race.num.4.4            dist1            dist2 
      11.3796845       15.5294234        7.0441579        3.7951986 
           dist3 
      -0.8704443 
Starting burnin of 16000000 steps
Phase 1: 200 steps (interval = 1000000)
Stochastic Approximation estimate:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
    -26.71824668       0.32576852       0.35849600       0.14103907 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
     -0.76492448      -1.32051466       0.05159114      16.55528280 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
     16.75593048      18.87239223      13.99723629      15.62327891 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
     12.42514097      16.32117539      14.32199350      15.05697154 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
     16.52653619      17.04339391      13.16098276      -1.28303900 
mix.race.num.3.4 mix.race.num.4.4            dist1            dist2 
     12.39525376      15.07904759       7.16124521       3.80660802 
           dist3 
     -1.03975137 
Phase 3:  1000 iterations (interval=1e+06)
This model was fit using MCMC.  To examine model diagnostics and check
for degeneracy, use the mcmc.diagnostics() function.
Warning messages:
1: In mple.existence(pl) : The MPLE does not exist!
2: In ergm.mple(s, s.obs, init = init, control = control, verbose = verbose,  :
  GLM may be separable; restarting glm with zeros.

> 
> net_stepwise_dist <- load_or_run(
+   "net.stepwise.dist",
+   quote(simulate(fit.stepwise.dist, nsim = 1))
+ )
Running and saving net.stepwise.dist
> 
> net_stepwise_dist
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 2761381 
    missing edges= 0 
    non-missing edges= 2761381 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> fit.stepwise.dist.odeg.0 <-
+   load_or_run("fit.stepwise.dist.odeg.0", quote(
+     ergm(
+       net_stepwise_dist ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1) +
+         # idegree(indeg.terms)+
+         odegree(deg.terms.0) +
+         dist(dist.terms),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num,
+           # c(negbin_inedges$n_nodes[c(indeg.terms+1)]),
+           c(outdegree_data$mean_n[c(deg.terms.0 + 1)]),
+           c(dist_nedge_distribution[dist.terms])
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Running and saving fit.stepwise.dist.odeg.0
Unable to match target stats. Using MCMLE estimation.
Starting maximum pseudolikelihood estimation (MPLE):
Obtaining the responsible dyads.
Evaluating the predictor and response matrix.
Maximizing the pseudolikelihood.
Finished MPLE.
Stochastic approximation algorithm with theta_0 equal to:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
    -30.75843816       0.14795141      -0.14879921       0.25767397 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
     -0.68383313      -1.30113050       0.09033013      18.40019425 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
     19.72552187      22.98187531      13.91129508      17.77851742 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
     12.20891591      20.75838113      14.50244824      17.08726975 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
     18.63584954      21.72321967       1.01151395      12.84756946 
mix.race.num.3.4 mix.race.num.4.4         odegree0            dist1 
     16.22198940      20.60378252      -3.67406844       7.04544684 
           dist2            dist3 
      4.22986216      -0.81628086 
Starting burnin of 16000000 steps
Phase 1: 200 steps (interval = 1000000)
Stochastic Approximation estimate:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
   -31.012733617      0.174337192      0.223662001      0.002420345 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
    -0.809297803     -1.305424400      0.007496955     20.449541736 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
    20.745761459     23.225222175     17.370320128     19.529969963 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
    16.429027389     20.654541901     17.698016986     18.969426299 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
    20.514901917     21.347497233      1.155920400     16.215123534 
mix.race.num.3.4 mix.race.num.4.4         odegree0            dist1 
    16.382235986     19.408536326     -1.041399046      7.217551466 
           dist2            dist3 
     3.949915632     -0.989547969 
Phase 3:  1000 iterations (interval=1e+06)
This model was fit using MCMC.  To examine model diagnostics and check
for degeneracy, use the mcmc.diagnostics() function.
Warning messages:
1: In mple.existence(pl) : The MPLE does not exist!
2: Approximate Hessian matrix is singular. Standard errors due to MCMC approximation of the likelihood cannot be evaluated. This is likely due to insufficient MCMC sample size or highly correlated model terms. 
> 
> net_fit_stepwise_dist_odeg0 <- load_or_run("net_fit_stepwise_dist_odeg0", quote(
+   simulate(fit.stepwise.dist.odeg.0, nsim = 1)
+ ))
Running and saving net_fit_stepwise_dist_odeg0
> net_fit_stepwise_dist_odeg0
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 194001 
    missing edges= 0 
    non-missing edges= 194001 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> fit.stepwise.dist.odeg.0.1 <-
+   load_or_run("fit.stepwise.dist.odeg.0.1", quote(
+     ergm(
+       net_fit_stepwise_dist_odeg0 ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1) +
+         # idegree(indeg.terms)+
+         odegree(deg.terms.0_1) +
+         dist(dist.terms),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num,
+           # c(negbin_inedges$n_nodes[c(indeg.terms+1)]),
+           c(outdegree_data$mean_n[c(deg.terms.0_1 + 1)]),
+           c(dist_nedge_distribution[dist.terms])
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Running and saving fit.stepwise.dist.odeg.0.1
Unable to match target stats. Using MCMLE estimation.
Starting maximum pseudolikelihood estimation (MPLE):
Obtaining the responsible dyads.
Evaluating the predictor and response matrix.
Maximizing the pseudolikelihood.
Finished MPLE.
Stochastic approximation algorithm with theta_0 equal to:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
     -53.8649541        0.9999410        1.2907510        1.0946081 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
      -0.2357366       -0.7913819        0.5097378       18.2528346 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
      19.2770546       45.1328295       13.0859748       17.2456349 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
      17.2372326       42.5278724       13.9702444       16.8122537 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
      19.1736189       43.3998025        1.9272729       15.4616272 
mix.race.num.3.4 mix.race.num.4.4         odegree0         odegree1 
      16.8830081       39.7634168      -50.1210503      -24.2466293 
           dist1            dist2            dist3 
       7.4579683        3.7379767       -0.8553407 
Starting burnin of 16000000 steps
Phase 1: 200 steps (interval = 1000000)
Stochastic Approximation estimate:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
    -55.77496481       0.01931495       0.10474157      -0.15849610 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
     -0.93241871      -1.37090663      -0.11994017      18.70325668 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
     19.07175662      48.30392487      15.87043908      17.82498641 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
     14.77722102      45.69265590      16.21706798      17.24724309 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
     18.88132555      46.38652811       2.07291922      14.52499896 
mix.race.num.3.4 mix.race.num.4.4         odegree0         odegree1 
     14.76585182      44.45142174     -55.10613085     -27.57123090 
           dist1            dist2            dist3 
      7.09080948       3.70319643      -1.15948339 
Phase 3:  1000 iterations (interval=1e+06)
This model was fit using MCMC.  To examine model diagnostics and check
for degeneracy, use the mcmc.diagnostics() function.
Warning messages:
1: In mple.existence(pl) : The MPLE does not exist!
2: Approximate Hessian matrix is singular. Standard errors due to MCMC approximation of the likelihood cannot be evaluated. This is likely due to insufficient MCMC sample size or highly correlated model terms. 
> 
> net_fit_stepwise_dist_odeg0_1 <- 
+ load_or_run("net_fit_stepwise_dist_odeg0_1", quote(
+   simulate(fit.stepwise.dist.odeg.0.1, nsim = 1)
+ ))
Running and saving net_fit_stepwise_dist_odeg0_1
> net_fit_stepwise_dist_odeg0_1
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 195206 
    missing edges= 0 
    non-missing edges= 195206 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> fit.stepwise.dist.odeg.0.2 <-
+   load_or_run("fit.stepwise.dist.odeg.0.2", quote(
+     ergm(
+       net_fit_stepwise_dist_odeg0_1 ~
+         edges +
+         nodemix("sex", levels2 = -1) +
+         nodemix("young", levels2 = -1) +
+         nodemix("race.num", levels2 = -1) +
+         # idegree(indeg.terms)+
+         odegree(deg.terms.0_2) +
+         dist(dist.terms),
+       target.stats =
+         c(
+           edges_target,
+           sex_mixing_align_order,
+           age_mixing_align_order,
+           target_race_num,
+           # c(negbin_inedges$n_nodes[c(indeg.terms+1)]),
+           c(outdegree_data$mean_n[c(deg.terms.0_2 + 1)]),
+           c(dist_nedge_distribution[dist.terms])
+         ),
+       eval.loglik = FALSE,
+       control = control.ergm(
+         MCMLE.maxit = 500,
+         main.method = c("Stochastic-Approximation"),
+         MCMC.interval = 1e6,
+         MCMC.samplesize = 1e6,
+         MCMLE.termination = "Hotelling",
+         MCMC.effectiveSize = NULL,
+         SAN = control.san(
+           SAN.maxit = 500,
+           SAN.nsteps = 1e8
+         )
+       )
+     )
+   ))
Running and saving fit.stepwise.dist.odeg.0.2
Unable to match target stats. Using MCMLE estimation.
Starting maximum pseudolikelihood estimation (MPLE):
Obtaining the responsible dyads.
Evaluating the predictor and response matrix.
Maximizing the pseudolikelihood.
Finished MPLE.
Stochastic approximation algorithm with theta_0 equal to:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
     -78.5727954        0.7050292        0.6221881        0.2800643 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
      -1.0874910       -1.3835796       -0.3137628       23.4456367 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
      23.9550538       69.5978056        0.6355370       21.8650621 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
      20.9777916       66.3980334        0.7341752       21.6212519 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
      23.5711057       66.5924464        2.2976781        6.7543624 
mix.race.num.3.4 mix.race.num.4.4         odegree0         odegree1 
      19.9196624       66.7953466     -119.8061625      -73.4584783 
        odegree2            dist1            dist2            dist3 
     -28.0710764        8.2853323        4.0810947       -1.0292526 
Starting burnin of 16000000 steps
Phase 1: 200 steps (interval = 1000000)
Stochastic Approximation estimate:
           edges      mix.sex.M.F      mix.sex.F.M      mix.sex.M.M 
    -79.62061575       0.05897571       0.15030553      -0.11172501 
   mix.young.1.0    mix.young.0.1    mix.young.1.1 mix.race.num.2.1 
     -0.91143485      -1.37143042      -0.13360262      22.72314623 
mix.race.num.3.1 mix.race.num.4.1 mix.race.num.1.2 mix.race.num.2.2 
     23.12871374      71.91355614       2.64335321      21.69765788 
mix.race.num.3.2 mix.race.num.4.2 mix.race.num.1.3 mix.race.num.2.3 
     18.77194910      69.10622272       3.04720884      21.17296505 
mix.race.num.3.3 mix.race.num.4.3 mix.race.num.1.4 mix.race.num.2.4 
     22.86220544      69.80453125       2.44477089       6.79481293 
mix.race.num.3.4 mix.race.num.4.4         odegree0         odegree1 
     18.70337378      67.60947466    -124.34555482     -77.02359083 
        odegree2            dist1            dist2            dist3 
    -30.31431882       7.90872253       4.05944338      -0.85660867 
Phase 3:  1000 iterations (interval=1e+06)
This model was fit using MCMC.  To examine model diagnostics and check
for degeneracy, use the mcmc.diagnostics() function.
Warning messages:
1: In mple.existence(pl) : The MPLE does not exist!
2: Approximate Hessian matrix is singular. Standard errors due to MCMC approximation of the likelihood cannot be evaluated. This is likely due to insufficient MCMC sample size or highly correlated model terms. 
> 
> net_fit_stepwise_dist_odeg0_2 <- 
+ load_or_run("net_fit_stepwise_dist_odeg0_2", quote(
+   simulate(fit.stepwise.dist.odeg.0.2, nsim = 1)
+ ))
Running and saving net_fit_stepwise_dist_odeg0_2
> net_fit_stepwise_dist_odeg0_2 #this is degenerate
 Network attributes:
  vertices = 32002 
  directed = TRUE 
  hyper = FALSE 
  loops = FALSE 
  multiple = FALSE 
  bipartite = FALSE 
  total edges= 1840023 
    missing edges= 0 
    non-missing edges= 1840023 

 Vertex attribute names: 
    age age_lb age_started age_ub agecat daily_injection_intensity fraction_recept_sharing hcv_status lat lon race race.num sex syringe_source vertex.names young Zip zipcode 

 Edge attribute names not shown 
> 
> fit.stepwise.dist.odeg.013 <-
+   load_or_run("fit.stepwise.dist.ode_dist_odeg0_2 #this is degenerate
+ 
+ fit.stepwise.dist.odeg.013 <-
+   load_or_run("fit.stepwise.dist.odeg.0.2", quote(
Error: unexpected symbol in:
"fit.stepwise.dist.odeg.013 <-
  load_or_run("fit.stepwise.dist.odeg.0.2"
Execution halted
