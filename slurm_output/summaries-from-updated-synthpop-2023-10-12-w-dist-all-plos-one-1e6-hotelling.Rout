
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

- Project '/oscar/home/akhann16/code/net-ergm-v4plus' loaded. [renv 1.0.7]
> # Summarize simulated statistics across multiple networks
> 
> rm(list=ls())
> 
> # Activate R environment ------------------------------
> 
> library(renv)

Attaching package: ‘renv’

The following objects are masked from ‘package:stats’:

    embed, update

The following objects are masked from ‘package:utils’:

    history, upgrade

The following objects are masked from ‘package:base’:

    autoload, load, remove, use

> renv::activate()
> 
> 
> # Libraries ----------
> 
> library(network)

‘network’ 1.18.2 (2023-12-04), part of the Statnet Project
* ‘news(package="network")’ for changes since last version
* ‘citation("network")’ for citation information
* ‘https://statnet.org’ for help, support, and other information

> library(ergm)

‘ergm’ 4.6.0 (2023-12-17), part of the Statnet Project
* ‘news(package="ergm")’ for changes since last version
* ‘citation("ergm")’ for citation information
* ‘https://statnet.org’ for help, support, and other information

‘ergm’ 4 is a major update that introduces some backwards-incompatible
changes. Please type ‘news(package="ergm")’ for a list of major
changes.

> library(ergm.userterms)
Loading required package: statnet.common

Attaching package: ‘statnet.common’

The following objects are masked from ‘package:base’:

    attr, order


‘ergm.userterms’ 3.1.1 (2020-02-01), part of the Statnet Project
* ‘news(package="ergm.userterms")’ for changes since last version
* ‘citation("ergm.userterms")’ for citation information
* ‘https://statnet.org’ for help, support, and other information

NOTE: If you use custom ERGM terms based on ‘ergm.userterms’ version
prior to 3.1, you will need to perform a one-time update of the package
boilerplate files (the files that you did not write or modify) from
‘ergm.userterms’ 3.1 or later. See help('eut-upgrade') for
instructions.

> library(here)
here() starts at /oscar/home/akhann16/code/net-ergm-v4plus
> 
> here()
[1] "/oscar/home/akhann16/code/net-ergm-v4plus"
> 
> 
> # Data ----------
> 
> load(here("simulate-from-ergms", "out", "simulated-updated-with-oct12-2024-synthpop-ergmv4-6-all-plos1-mcmc-int1e6-samp1e6-hotelling.RData"))
> 
> 
> 
> # Compute summaries and IQRs ----------
> 
> nsim.vec <- 1:100 #only taking 5 to ease computation
> 
> sim_results <- sim_results[nsim.vec]
> 
> edgecount.sim.data <- (unlist(lapply(sim_results, function (x) network.edgecount(x)))) #edge count summary
> mean(edgecount.sim.data)
[1] 26029.29
> quantile(edgecount.sim.data, probs = c(2.5/100, 97.5/100))
    2.5%    97.5% 
25364.47 26590.53 
> 
> summary(outdeg0); quantile(outdeg0, probs = c(2.5/100, 97.5/100))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  19452   19691   19771   19776   19856   20103 
    2.5%    97.5% 
19551.50 20060.85 
> summary(outdeg1); quantile(outdeg1, probs = c(2.5/100, 97.5/100)) 
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   5432    5536    5584    5592    5653    5736 
    2.5%    97.5% 
5451.025 5705.525 
> summary(outdeg2); quantile(outdeg2, probs = c(2.5/100, 97.5/100))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   2625    2758    2808    2800    2842    2924 
    2.5%    97.5% 
2694.950 2894.825 
> summary(outdeg3); quantile(outdeg3, probs = c(2.5/100, 97.5/100))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   1330    1424    1455    1455    1481    1561 
    2.5%    97.5% 
1368.225 1540.100 
> summary(outdeg4); quantile(outdeg4, probs = c(2.5/100, 97.5/100))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   1575    1678    1706    1709    1742    1813 
    2.5%    97.5% 
1610.175 1804.775 
> 
> summary(indeg0); quantile(indeg0, probs = c(2.5/100, 97.5/100))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  22503   22702   22782   22783   22856   23127 
    2.5%    97.5% 
22588.85 23026.53 
> summary(indeg1); quantile(indeg1, probs = c(2.5/100, 97.5/100)) 
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   4083    4222    4262    4260    4310    4399 
    2.5%    97.5% 
4117.325 4378.400 
> summary(indeg2); quantile(indeg2, probs = c(2.5/100, 97.5/100))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    960    1031    1052    1054    1076    1140 
    2.5%    97.5% 
 988.225 1124.200 
> summary(indeg3); quantile(indeg3, probs = c(2.5/100, 97.5/100))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    980    1038    1056    1057    1075    1128 
    2.5%    97.5% 
 993.375 1116.150 
> summary(indeg4); quantile(indeg4, probs = c(2.5/100, 97.5/100))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  819.0   866.5   888.5   884.7   902.2   945.0 
   2.5%   97.5% 
829.375 940.100 
> 
> indeg.gr.0.1 <- n - (indeg0 + indeg1)
> summary(indeg.gr.0.1)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   4735    4918    4966    4959    5014    5109 
> quantile(indeg.gr.0.1, probs = c(2.5/100, 97.5/100))
    2.5%    97.5% 
4784.825 5097.625 
> 
> outdeg.gr.0.3 <- n - (outdeg0 + outdeg1 + outdeg2 + outdeg3)
> summary(outdeg.gr.0.3)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   2237    2343    2379    2379    2418    2523 
> quantile(outdeg.gr.0.3, probs = c(2.5/100, 97.5/100))
  2.5%  97.5% 
2260.9 2476.3 
> 
> sim.race.num <- lapply(nsim.vec, function (x) summary(sim_results[[x]] ~ nodemix("race.num")))
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.1.1"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
     NA      NA      NA     NaN      NA      NA     100 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.2.1"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  733.0   811.0   833.5   833.5   857.5   913.0 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.3.1"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  926.0   977.8  1001.0  1000.7  1020.5  1085.0 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.4.1"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  296.0   336.8   346.0   348.6   361.2   414.0 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.1.2"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    908     990    1016    1018    1045    1128 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.2.2"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   8094    8299    8371    8376    8460    8642 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.3.2"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  550.0   603.5   625.0   626.2   648.0   679.0 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.4.2"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  75.00   87.75   93.50   93.94   99.25  119.00 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.1.3"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   1093    1168    1190    1188    1212    1282 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.2.3"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  707.0   754.5   772.5   772.5   790.5   838.0 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.3.3"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   3381    3526    3564    3571    3622    3763 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.4.3"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   68.0    82.0    88.5    88.4    95.0   115.0 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.1.4"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    447     506     527     527     547     589 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.2.4"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  213.0   239.8   250.0   251.3   264.0   298.0 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.3.4"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  203.0   245.0   255.0   255.5   268.0   316.0 
> summary(unlist(lapply(sim.race.num, function (x) x["mix.race.num.4.4"])))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  147.0   166.0   176.5   176.1   183.2   214.0 
> 
> quantile(unlist(lapply(sim.race.num, function (x) x["mix.race.num.1.1"])), probs = c(2.5/100, 97.5/100))
Error in quantile.default(unlist(lapply(sim.race.num, function(x) x["mix.race.num.1.1"])),  : 
  missing values and NaN's not allowed if 'na.rm' is FALSE
Calls: quantile -> quantile.default
Execution halted
